#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

: "${MMDAPP:?ERROR: MMDAPP is not set}"

if ! type DistroShellContext >/dev/null 2>&1 ; then
	DistroShellContext(){
		case "$1" in
			--uncache)
				shift
				echo "DistroLocalContext: clear cache" >&2
				return 0
			;;
			--is-spec-option)
				case "$2" in
					--distro-path-auto|--distro-source-only|--distro-from-source|--distro-from-cached|--distro-from-output|--distro-from-distro)
						return 0
					;;
				esac
				set +e ; return 1
			;;
			*)
				if DistroShellContext --is-spec-option "$1" ; then
					local previousSpec="$MDSC_OPTION"
					local adpcChangeSpec="true"
			
					[ -z "$MDSC_DETAIL" ] || echo "DistroShellContext: input spec: $1" >&2
					. "$MDDC_ORIGIN/myx/myx.distro-deploy/sh-lib/DistroShellContextSetInputSpec.include"		
					return 0
				fi
			;;
		esac
	}
fi

if ! type Require >/dev/null 2>&1 ; then
	Require(){
		local distroCommand="$1" ; shift
		if [ -z "$distroCommand" ] || [ "--help" == "$distroCommand" ] ; then
			( . "$MDDC_ORIGIN/myx/myx.distro-.local/sh-lib/HelpRequire.include" )
			set +e ; return 1
		fi
		if type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
			return 0
		fi
		
		local ITEM
		for ITEM in deploy .local system source remote ; do
			if [ -f "$MDDC_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh" ] ; then
				. "$MDDC_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
				return 0
			fi
		done
		source "${distroCommand%.fn.sh}.fn.sh"
		return 0
	}
fi

if ! type Distro >/dev/null 2>&1 ; then
	Distro(){
		case "$1" in
			''|--*)
				( . "$MDDC_ORIGIN/myx/myx.distro-system/sh-lib/DistroSystemConsole.include" )
				set +e ; return 1
			;;
		esac
		local distroCommand="$1" ; shift
		if [ -z "$distroCommand" ] ; then
			( . "$MDDC_ORIGIN/myx/myx.distro-system/sh-lib/HelpConsoleDistro.include" )
			set +e ; return 1
		fi
		if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
			. "${distroCommand%.fn.sh}.fn.sh"
		fi
		"${distroCommand%.fn.sh}" "$@"
	}
fi

if [ -z "$MDDC_ORIGIN" ] || [ "$MDDC_ORIGIN" == "${MDDC_ORIGIN#$MMDAPP/}" ] ; then
	MDSC_SOURCE=""
	MDSC_CACHED=""
	MDSC_OUTPUT=""
	MDSC_INMODE=""
	MDSC_OPTION=""
	MDSC_DETAIL=""
	
	export MDSC_INMODE
	export MDSC_SOURCE
	export MDSC_CACHED
	export MDSC_OUTPUT
	export MDSC_OPTION

	export MDSC_DETAIL

	MDDC_ORIGIN="$MDDC_ORIGIN/myx/myx.distro-deploy/sh-lib"
	export MDDC_ORIGIN
	
	echo "DistroContext: init: $MDDC_ORIGIN/myx/myx.distro-deploy" >&2
fi


while true ; do
	if [ "--verbose" = "$1" ] ; then
		export MDSC_DETAIL="true"
		shift
		continue
	fi 
	if DistroShellContext --is-spec-option "$1" ; then
		[ -n "$MDSC_DETAIL" ] && echo "DistroShellContext: input spec: $1" >&2
		. "$MDDC_ORIGIN/myx/myx.distro-deploy/sh-lib/DistroShellContextSetInputSpec.include"		
		shift
		continue
	fi
	break
done


